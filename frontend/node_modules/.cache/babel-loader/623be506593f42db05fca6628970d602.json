{"ast":null,"code":"var _jsxFileName = \"/Users/alejandro/Desktop/multimedia-mern-app/frontend/src/components/Form/Form.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FileBase from \"react-file-base64\";\nimport useStyles from \"./styles\";\nimport { createPost, updatePost } from \"../../actions/posts\";\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  var _user$result3;\n  const [wantToUpdate, setWantToUpdate] = useState(false);\n  const [postData, setPostData] = useState({\n    title: \"\",\n    message: \"\",\n    tags: \"\",\n    selectedFile: \"\"\n  });\n  const post = useSelector(state => currentId ? state.posts.find(message => message._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n\n  // get the post info when want to update it\n  useEffect(() => {\n    if (post) {\n      setWantToUpdate(true);\n      setPostData(post);\n    }\n  }, [post]);\n\n  // delete the information entered\n  const clear = () => {\n    setCurrentId(0);\n    setWantToUpdate(false);\n    setPostData({\n      title: \"\",\n      message: \"\",\n      tags: \"\",\n      selectedFile: \"\"\n    });\n  };\n\n  // function for the submit action of the form\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // if the post does not exist\n    if (currentId === 0) {\n      var _user$result;\n      dispatch(createPost({\n        ...postData,\n        name: (user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name) || (user === null || user === void 0 ? void 0 : user.userName)\n      }));\n      clear();\n    } else {\n      var _user$result2;\n      dispatch(updatePost(currentId, {\n        ...postData,\n        name: (user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name) || (user === null || user === void 0 ? void 0 : user.userName)\n      }));\n      clear();\n    }\n  };\n  if (!(user === null || user === void 0 ? void 0 : (_user$result3 = user.result) === null || _user$result3 === void 0 ? void 0 : _user$result3.name) || !(user === null || user === void 0 ? void 0 : user.userName)) {\n    return /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h8\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, \"You need an account to create or like other's memories\"));\n  }\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, currentId ? `Editing \"${post.title}\"` : \"Creating a Memory\"), /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    variant: \"outlined\",\n    label: \"Title\",\n    fullWidth: true,\n    value: postData.title,\n    onChange: e => setPostData({\n      ...postData,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"message\",\n    variant: \"outlined\",\n    label: \"Message\",\n    fullWidth: true,\n    multiline: true,\n    minRows: 4,\n    value: postData.message,\n    onChange: e => setPostData({\n      ...postData,\n      message: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"tags\",\n    variant: \"outlined\",\n    label: \"Tags (coma separated)\",\n    fullWidth: true,\n    value: postData.tags,\n    onChange: e => setPostData({\n      ...postData,\n      tags: e.target.value.split(\",\")\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FileBase, {\n    type: \"file\",\n    multiple: false,\n    onDone: ({\n      base64\n    }) => setPostData({\n      ...postData,\n      selectedFile: base64\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, wantToUpdate ? \"Update Post\" : \"Create Post\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: clear,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, wantToUpdate ? \"Cancel\" : \"Clear\")));\n};\nexport default Form;","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Typography","Paper","useDispatch","useSelector","FileBase","useStyles","createPost","updatePost","Form","currentId","setCurrentId","_user$result3","wantToUpdate","setWantToUpdate","postData","setPostData","title","message","tags","selectedFile","post","state","posts","find","_id","dispatch","classes","user","JSON","parse","localStorage","getItem","clear","handleSubmit","e","preventDefault","_user$result","name","result","userName","_user$result2","createElement","className","paper","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","variant","align","autoComplete","noValidate","root","form","onSubmit","label","fullWidth","value","onChange","target","multiline","minRows","split","fileInput","type","multiple","onDone","base64","buttonSubmit","color","size","onClick"],"sources":["/Users/alejandro/Desktop/multimedia-mern-app/frontend/src/components/Form/Form.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FileBase from \"react-file-base64\";\n\nimport useStyles from \"./styles\";\nimport { createPost, updatePost } from \"../../actions/posts\";\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [wantToUpdate, setWantToUpdate] = useState(false);\n  const [postData, setPostData] = useState({\n    title: \"\",\n    message: \"\",\n    tags: \"\",\n    selectedFile: \"\",\n  });\n  const post = useSelector((state) =>\n    currentId ? state.posts.find((message) => message._id === currentId) : null\n  );\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n\n  // get the post info when want to update it\n  useEffect(() => {\n    if (post) {\n      setWantToUpdate(true);\n      setPostData(post);\n    }\n  }, [post]);\n\n  // delete the information entered\n  const clear = () => {\n    setCurrentId(0);\n    setWantToUpdate(false);\n    setPostData({\n      title: \"\",\n      message: \"\",\n      tags: \"\",\n      selectedFile: \"\",\n    });\n  };\n\n  // function for the submit action of the form\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // if the post does not exist\n    if (currentId === 0) {\n      dispatch(\n        createPost({ ...postData, name: user?.result?.name || user?.userName })\n      );\n      clear();\n    } else {\n      dispatch(\n        updatePost(currentId, {\n          ...postData,\n          name: user?.result?.name || user?.userName,\n        })\n      );\n      clear();\n    }\n  };\n\n  if (!user?.result?.name || !user?.userName) {\n    return (\n      <Paper className={classes.paper}>\n        <Typography variant=\"h8\" align=\"center\">\n          You need an account to create or like other's memories\n        </Typography>\n      </Paper>\n    );\n  }\n\n  return (\n    <Paper className={classes.paper}>\n      <form\n        autoComplete=\"off\"\n        noValidate\n        className={`${classes.root} ${classes.form}`}\n        onSubmit={handleSubmit}\n      >\n        <Typography variant=\"h6\">\n          {currentId ? `Editing \"${post.title}\"` : \"Creating a Memory\"}\n        </Typography>\n        <TextField\n          name=\"title\"\n          variant=\"outlined\"\n          label=\"Title\"\n          fullWidth\n          value={postData.title}\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\n        />\n        <TextField\n          name=\"message\"\n          variant=\"outlined\"\n          label=\"Message\"\n          fullWidth\n          multiline\n          minRows={4}\n          value={postData.message}\n          onChange={(e) =>\n            setPostData({ ...postData, message: e.target.value })\n          }\n        />\n        <TextField\n          name=\"tags\"\n          variant=\"outlined\"\n          label=\"Tags (coma separated)\"\n          fullWidth\n          value={postData.tags}\n          onChange={(e) =>\n            setPostData({ ...postData, tags: e.target.value.split(\",\") })\n          }\n        />\n        <div className={classes.fileInput}>\n          <FileBase\n            type=\"file\"\n            multiple={false}\n            onDone={({ base64 }) =>\n              setPostData({ ...postData, selectedFile: base64 })\n            }\n          />\n        </div>\n        <Button\n          className={classes.buttonSubmit}\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          type=\"submit\"\n          fullWidth\n        >\n          {wantToUpdate ? \"Update Post\" : \"Create Post\"}\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          onClick={clear}\n          fullWidth\n        >\n          {wantToUpdate ? \"Cancel\" : \"Clear\"}\n        </Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Form;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}