{"ast":null,"code":"var _jsxFileName = \"/Users/alejandro/Desktop/multimedia-mern-app/client/src/components/Form/Form.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FileBase from \"react-file-base64\";\nimport useStyles from \"./styles\";\nimport { createPost, updatePost } from \"../../actions/posts\";\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  const [postData, setPostData] = useState({\n    creator: \"\",\n    title: \"\",\n    message: \"\",\n    tags: \"\",\n    selectedFile: \"\"\n  });\n  const post = useSelector(state => currentId ? state.posts.find(message => message._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  // get the post info when want to update it\n  useEffect(() => {\n    if (post) {\n      setWantToUpdate(true);\n      setPostData(post);\n    }\n  }, [post]);\n\n  // delete the information entered\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      creator: \"\",\n      title: \"\",\n      message: \"\",\n      tags: \"\",\n      selectedFile: \"\"\n    });\n  };\n\n  // function for the submit action of the form\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // if the post does not exist\n    if (currentId === 0) {\n      dispatch(createPost(postData));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, postData));\n      clear();\n    }\n  };\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, currentId ? `Editing \"${post.title}\"` : \"Creating a Memory\"), /*#__PURE__*/React.createElement(TextField, {\n    name: \"creator\",\n    variant: \"outlined\",\n    label: \"Creator\",\n    fullWidth: true,\n    value: postData.creator,\n    onChange: e => setPostData({\n      ...postData,\n      creator: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    variant: \"outlined\",\n    label: \"Title\",\n    fullWidth: true,\n    value: postData.title,\n    onChange: e => setPostData({\n      ...postData,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"message\",\n    variant: \"outlined\",\n    label: \"Message\",\n    fullWidth: true,\n    multiline: true,\n    minRows: 4,\n    value: postData.message,\n    onChange: e => setPostData({\n      ...postData,\n      message: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"tags\",\n    variant: \"outlined\",\n    label: \"Tags (coma separated)\",\n    fullWidth: true,\n    value: postData.tags,\n    onChange: e => setPostData({\n      ...postData,\n      tags: e.target.value.split(\",\")\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FileBase, {\n    type: \"file\",\n    multiple: false,\n    onDone: ({\n      base64\n    }) => setPostData({\n      ...postData,\n      selectedFile: base64\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, \"Post\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: clear,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, \"Clear\")));\n};\nexport default Form;","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Typography","Paper","useDispatch","useSelector","FileBase","useStyles","createPost","updatePost","Form","currentId","setCurrentId","postData","setPostData","creator","title","message","tags","selectedFile","post","state","posts","find","_id","dispatch","classes","setWantToUpdate","clear","handleSubmit","e","preventDefault","createElement","className","paper","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","autoComplete","noValidate","root","form","onSubmit","variant","name","label","fullWidth","value","onChange","target","multiline","minRows","split","fileInput","type","multiple","onDone","base64","buttonSubmit","color","size","onClick"],"sources":["/Users/alejandro/Desktop/multimedia-mern-app/client/src/components/Form/Form.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FileBase from \"react-file-base64\";\n\nimport useStyles from \"./styles\";\nimport { createPost, updatePost } from \"../../actions/posts\";\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [postData, setPostData] = useState({\n    creator: \"\",\n    title: \"\",\n    message: \"\",\n    tags: \"\",\n    selectedFile: \"\",\n  });\n  const post = useSelector((state) =>\n    currentId ? state.posts.find((message) => message._id === currentId) : null\n  );\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  // get the post info when want to update it\n  useEffect(() => {\n    if (post) {\n      setWantToUpdate(true);\n      setPostData(post);\n    }\n  }, [post]);\n\n  // delete the information entered\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      creator: \"\",\n      title: \"\",\n      message: \"\",\n      tags: \"\",\n      selectedFile: \"\",\n    });\n  };\n\n  // function for the submit action of the form\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // if the post does not exist\n    if (currentId === 0) {\n      dispatch(createPost(postData));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, postData));\n      clear();\n    }\n  };\n\n  return (\n    <Paper className={classes.paper}>\n      <form\n        autoComplete=\"off\"\n        noValidate\n        className={`${classes.root} ${classes.form}`}\n        onSubmit={handleSubmit}\n      >\n        <Typography variant=\"h6\">\n          {currentId ? `Editing \"${post.title}\"` : \"Creating a Memory\"}\n        </Typography>\n        <TextField\n          name=\"creator\"\n          variant=\"outlined\"\n          label=\"Creator\"\n          fullWidth\n          value={postData.creator}\n          onChange={(e) =>\n            setPostData({ ...postData, creator: e.target.value })\n          }\n        />\n        <TextField\n          name=\"title\"\n          variant=\"outlined\"\n          label=\"Title\"\n          fullWidth\n          value={postData.title}\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\n        />\n        <TextField\n          name=\"message\"\n          variant=\"outlined\"\n          label=\"Message\"\n          fullWidth\n          multiline\n          minRows={4}\n          value={postData.message}\n          onChange={(e) =>\n            setPostData({ ...postData, message: e.target.value })\n          }\n        />\n        <TextField\n          name=\"tags\"\n          variant=\"outlined\"\n          label=\"Tags (coma separated)\"\n          fullWidth\n          value={postData.tags}\n          onChange={(e) =>\n            setPostData({ ...postData, tags: e.target.value.split(\",\") })\n          }\n        />\n        <div className={classes.fileInput}>\n          <FileBase\n            type=\"file\"\n            multiple={false}\n            onDone={({ base64 }) =>\n              setPostData({ ...postData, selectedFile: base64 })\n            }\n          />\n        </div>\n        <Button\n          className={classes.buttonSubmit}\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          type=\"submit\"\n          fullWidth\n        >\n          Post\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          onClick={clear}\n          fullWidth\n        >\n          Clear\n        </Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Form;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}